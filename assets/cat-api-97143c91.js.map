{"version":3,"file":"cat-api-97143c91.js","sources":["../../src/js/cat-api.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.headers['x-api-key'] =\n  'live_zVZLegicNQX58NrRr2a3UtQNLaAsu3u4YQWqDV3kak42qEhEeaTlUPvgEQMUxgbd';\nconst selectBreedRef = document.querySelector('#breeds');\nconst breedContainerRef = document.querySelector('.breedContainer');\n// https://api.thecatapi.com/v1/images/search?breed_ids=beng\n// https://api.thecatapi.com/v1/breeds\n/*\n\n\nconst headers = new Headers({\n  'Content-Type': 'application/json',\n  'x-api-key':\n    'live_zVZLegicNQX58NrRr2a3UtQNLaAsu3u4YQWqDV3kak42qEhEeaTlUPvgEQMUxgbd',\n});\n\nvar requestOptions = {\n  method: 'GET',\n  headers: headers,\n  redirect: 'follow',\n};\n\nfetch(\n  'https://api.thecatapi.com/v1/images/search?breed_ids=beng',\n  requestOptions\n)\n  .then(response => response.json())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n*/\n\nlet result;\n\n// Function to make the Axios request\nasync function fetchBreeds() {\n  try {\n    const response = await axios.get('https://api.thecatapi.com/v1/breeds');\n    const result = response.data;\n    return result;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n}\n\nasync function fetchBreed(breed) {\n  try {\n    const response = await axios.get(\n      `https://api.thecatapi.com/v1/images/search?breed_ids=${breed}`\n    );\n    const result = response.data;\n    return result;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n}\n// Call the function to fetch data\nconst options = [];\nconst data = fetchBreeds();\ndata.then(result => {\n  result.forEach(breed => {\n    const breedOption = document.createElement('option');\n    breedOption.value = breed.id;\n    breedOption.textContent = breed.name;\n    options.push(breedOption);\n  });\n  selectBreedRef.append(...options);\n});\n\nselectBreedRef.addEventListener('change', e => {\n  const breedDetails = fetchBreed(e.target.value);\n  breedDetails.then(result => {\n    console.log(result);\n    let breedContainer = document.createElement('div');\n    let breedTitle = document.createElement('h1');\n    breedTitle.textContent = result[0].breeds[0].name;\n    let breedImg = document.createElement('img');\n    breedImg.style.width = '800px';\n\n    breedImg.src = result[0].url;\n    breedImg.alt = `picture of ${result[0].breeds[0].name}`;\n    let breedDescription = document.createElement('p');\n    breedDescription.textContent = result[0].breeds[0].description;\n    breedContainer.append(breedImg, breedTitle, breedDescription);\n    breedContainerRef.replaceChildren(breedContainer);\n  });\n});\n"],"names":["axios","selectBreedRef","breedContainerRef","fetchBreeds","error","fetchBreed","breed","options","data","result","breedOption","e","breedContainer","breedTitle","breedImg","breedDescription"],"mappings":"0uBACAA,EAAM,SAAS,QAAQ,WAAW,EAChC,wEACF,MAAMC,EAAiB,SAAS,cAAc,SAAS,EACjDC,EAAoB,SAAS,cAAc,iBAAiB,EA8BlE,eAAeC,GAAc,CAC3B,GAAI,CAGF,OAFiB,MAAMH,EAAM,IAAI,qCAAqC,GAC9C,IAEzB,OAAQI,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC5C,CACH,CAEA,eAAeC,EAAWC,EAAO,CAC/B,GAAI,CAKF,OAJiB,MAAMN,EAAM,IAC3B,wDAAwDM,CAAK,EACnE,GAC4B,IAEzB,OAAQF,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC5C,CACH,CAEA,MAAMG,EAAU,CAAA,EACVC,EAAOL,EAAW,EACxBK,EAAK,KAAKC,GAAU,CAClBA,EAAO,QAAQH,GAAS,CACtB,MAAMI,EAAc,SAAS,cAAc,QAAQ,EACnDA,EAAY,MAAQJ,EAAM,GAC1BI,EAAY,YAAcJ,EAAM,KAChCC,EAAQ,KAAKG,CAAW,CAC5B,CAAG,EACDT,EAAe,OAAO,GAAGM,CAAO,CAClC,CAAC,EAEDN,EAAe,iBAAiB,SAAUU,GAAK,CACxBN,EAAWM,EAAE,OAAO,KAAK,EACjC,KAAKF,GAAU,CAC1B,QAAQ,IAAIA,CAAM,EAClB,IAAIG,EAAiB,SAAS,cAAc,KAAK,EAC7CC,EAAa,SAAS,cAAc,IAAI,EAC5CA,EAAW,YAAcJ,EAAO,CAAC,EAAE,OAAO,CAAC,EAAE,KAC7C,IAAIK,EAAW,SAAS,cAAc,KAAK,EAC3CA,EAAS,MAAM,MAAQ,QAEvBA,EAAS,IAAML,EAAO,CAAC,EAAE,IACzBK,EAAS,IAAM,cAAcL,EAAO,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,GACrD,IAAIM,EAAmB,SAAS,cAAc,GAAG,EACjDA,EAAiB,YAAcN,EAAO,CAAC,EAAE,OAAO,CAAC,EAAE,YACnDG,EAAe,OAAOE,EAAUD,EAAYE,CAAgB,EAC5Db,EAAkB,gBAAgBU,CAAc,CACpD,CAAG,CACH,CAAC"}